{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","hasRan","setHasRan","maxNumber","setMaxNumber","useAddition","setUseAddition","goal","setGoal","wrongAnswer","setWrongAnswer","flashGreen","setFlashGreen","numCorrect","setNumCorrect","numWrong","setNumWrong","score","setScore","meterValue","setMeterValue","currentMeterValue","useRef","current","getNext","max","Math","floor","random","getSet","addition","firstNumber","secondNumber","set","Set","add","size","answers","Array","from","sort","a","b","number1","number2","getAddition","numerator","denominator","getMultiplication","setCurrentProblem","timeRemaining","setTimeRemaining","countdownTimer","useEffect","setTimeout","meterTimer","clearInterval","countdown","setInterval","isWaiting","flashTimeout","goalInput","setGoalInput","className","onClick","type","value","onChange","e","target","newGoal","parseInt","style","fontSize","clearTimeout","flex","display","justifyContent","flexDirection","alignItems","fontWeight","map","answer","index","makeGreen","makeRed","gridColumnStart","gridRowStart","background","onSelectAnswer","gridRowEnd","min","transform","height","width","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35af834f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState, useRef } from \"react\";\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction App() {\n  const [hasRan, setHasRan] = useState(false);\n  const [maxNumber, setMaxNumber] = useState(9);\n  const [useAddition, setUseAddition] = useState(false);\n\n  const [goal, setGoal] = useState(30);\n\n  const [wrongAnswer, setWrongAnswer] = useState(null);\n  const [flashGreen, setFlashGreen] = useState(false);\n  const [numCorrect, setNumCorrect] = useState(0);\n  const [numWrong, setNumWrong] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const [meterValue, setMeterValue] = useState(0);\n\n  const currentMeterValue = useRef(meterValue);\n\n  currentMeterValue.current = meterValue;\n\n  const getNext = () => {\n    return getRandomInt(maxNumber) + 1;\n  };\n\n  const getAddition = () => {\n    const firstNumber = getNext();\n    const secondNumber = getNext();\n\n    const set = new Set();\n    set.add(firstNumber + secondNumber);\n    while (set.size < 4) {\n      set.add(getNext() + secondNumber);\n    }\n\n    const answers = Array.from(set);\n    answers.sort((a, b) => a - b);\n    return { number1: firstNumber, number2: secondNumber, answers };\n  };\n\n  const getMultiplication = () => {\n    const numerator = getNext();\n    const denominator = getNext();\n\n    const set = new Set();\n    set.add(numerator * denominator);\n    while (set.size < 4) {\n      set.add(getNext() * denominator);\n    }\n\n    const answers = Array.from(set);\n    answers.sort((a, b) => a - b);\n    return { number1: numerator, number2: denominator, answers };\n  };\n\n  const getSet = (addition) => {\n    if (addition) {\n      return getAddition();\n    }\n    return getMultiplication();\n  };\n\n  const [{ number1, number2, answers }, setCurrentProblem] = useState(() =>\n    getSet()\n  );\n\n  const [timeRemaining, setTimeRemaining] = useState(0);\n\n  const countdownTimer = useRef();\n  useEffect(() => {\n    if (timeRemaining <= 0) {\n    } else {\n      countdownTimer.current = setTimeout(() => {\n        setTimeRemaining(timeRemaining - 1);\n        //setMeterValue(Math.max(0, currentMeterValue.current - 1.5));\n      }, 1000);\n    }\n  }, [timeRemaining]);\n\n  const meterTimer = useRef();\n\n  if (timeRemaining <= 0 && meterTimer.current) {\n    clearInterval(meterTimer.current);\n    meterTimer.current = null;\n  }\n\n  const countdown = timeRemaining - 60;\n\n  useEffect(() => {\n    if (timeRemaining > 0 && !meterTimer.current && countdown <= 0) {\n      meterTimer.current = setInterval(() => {\n        currentMeterValue.current -= goal / 60 / 2;\n        setMeterValue(Math.max(0, currentMeterValue.current));\n      }, 50);\n    }\n  }, [timeRemaining, goal]);\n\n  const onStart = () => {};\n\n  const onSelectAddition = () => {\n    currentMeterValue.current = 10;\n    setMeterValue(10);\n    setUseAddition(true);\n    onStart();\n    if (timeRemaining) {\n      clearTimeout(countdownTimer.current);\n    }\n    setCurrentProblem(getSet(true));\n    setNumWrong(0);\n    setNumCorrect(0);\n    setScore(0);\n    setTimeRemaining(63);\n    setHasRan(true);\n  };\n\n  const onSelectMultiplication = () => {\n    currentMeterValue.current = 10;\n    setMeterValue(10);\n    setUseAddition(false);\n    onStart();\n    if (timeRemaining) {\n      clearTimeout(countdownTimer.current);\n    }\n    setCurrentProblem(getSet(false));\n    setNumWrong(0);\n    setNumCorrect(0);\n    setScore(0);\n    setTimeRemaining(63);\n    setHasRan(true);\n  };\n\n  const isWaiting = useRef(false);\n\n  const flashTimeout = useRef(null);\n\n  const onSelectAnswer = (answer) => {\n    if (timeRemaining && !isWaiting.current) {\n      const actualAnswer = useAddition ? number1 + number2 : number1 * number2;\n      if (answer === actualAnswer) {\n        setNumCorrect(numCorrect + 1);\n        setScore(score + Math.floor(currentMeterValue.current));\n        currentMeterValue.current = 10;\n        setMeterValue(10);\n        setCurrentProblem(getSet(useAddition));\n        setFlashGreen(true);\n        clearTimeout(flashTimeout.current);\n        flashTimeout.current = setTimeout(() => {\n          setFlashGreen(false);\n        }, 1000);\n      } else {\n        isWaiting.current = true;\n        setNumWrong(numWrong + 1);\n        setWrongAnswer(answer);\n        setTimeout(() => {\n          setWrongAnswer(null);\n          setCurrentProblem(getSet(useAddition));\n          isWaiting.current = false;\n        }, 2000);\n      }\n    }\n  };\n  const [goalInput, setGoalInput] = useState(goal);\n  return (\n    <div>\n      {!timeRemaining && (\n        <div className=\"intro\">\n          <div className=\"levels\">\n            <div className=\"levelsdesc\">Select difficulty</div>\n            <button\n              className={maxNumber === 4 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(4);\n              }}\n            >\n              4\n            </button>\n            <button\n              className={maxNumber === 5 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(5);\n              }}\n            >\n              5\n            </button>\n            <button\n              className={maxNumber === 6 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(6);\n              }}\n            >\n              6\n            </button>\n            <button\n              className={maxNumber === 7 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(7);\n              }}\n            >\n              7\n            </button>\n            <button\n              className={maxNumber === 8 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(8);\n              }}\n            >\n              8\n            </button>\n            <button\n              className={maxNumber === 9 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(9);\n              }}\n            >\n              9\n            </button>\n            <button\n              className={maxNumber === 10 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(10);\n              }}\n            >\n              10\n            </button>\n            <button\n              className={maxNumber === 11 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(11);\n              }}\n            >\n              11\n            </button>\n            <button\n              className={maxNumber === 12 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(12);\n              }}\n            >\n              12\n            </button>\n            <button\n              className={maxNumber === 13 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(13);\n              }}\n            >\n              13\n            </button>\n            <button\n              className={maxNumber === 14 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(14);\n              }}\n            >\n              14\n            </button>\n            <button\n              className={maxNumber === 15 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(15);\n              }}\n            >\n              15\n            </button>\n            <button\n              className={maxNumber === 16 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(16);\n              }}\n            >\n              16\n            </button>\n            <button\n              className={maxNumber === 17 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(17);\n              }}\n            >\n              17\n            </button>\n            <button\n              className={maxNumber === 18 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(18);\n              }}\n            >\n              18\n            </button>\n            <button\n              className={maxNumber === 19 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(19);\n              }}\n            >\n              19\n            </button>\n            <button\n              className={maxNumber === 20 ? \"selected\" : \"\"}\n              onClick={() => {\n                setMaxNumber(20);\n              }}\n            >\n              20\n            </button>\n            <div>\n              <label>Goal: </label>\n              <input\n                type=\"number\"\n                value={goalInput}\n                onChange={(e) => {\n                  setGoalInput(e.target.value);\n                  const newGoal = parseInt(e.target.value);\n                  if (newGoal > 10 && newGoal < 100) {\n                    setGoal(newGoal);\n                  }\n                }}\n              />\n            </div>\n          </div>\n\n          <div>\n            <div>\n              {hasRan && !timeRemaining ? `You got ${numCorrect} right!` : \"\"}\n            </div>\n            <div>\n              {\" \"}\n              {hasRan && !timeRemaining ? `You got ${numWrong} wrong.` : \"\"}\n            </div>\n            <div>{hasRan && !timeRemaining ? `You scored ${score}!` : \"\"}</div>\n          </div>\n          <button style={{ fontSize: 20 }} onClick={onSelectAddition}>\n            Addition test\n          </button>\n          <button style={{ fontSize: 20 }} onClick={onSelectMultiplication}>\n            Multiplication test\n          </button>\n        </div>\n      )}\n      {countdown > 0 && <div className=\"countdown\">{countdown}</div>}\n      {countdown <= 0 && timeRemaining > 0 && (\n        <div className={`App${countdown > 0 ? \" app-opaque\" : \"\"}`}>\n          <div\n            style={{\n              flex: \"1\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <div>Time left: {timeRemaining}s</div>\n            </div>\n            <div\n              style={{\n                fontWeight: \"bold\",\n                fontSize: \"60px\",\n                flex: 1,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {!useAddition && (\n                <span>\n                  {number1} X {number2}\n                </span>\n              )}\n              {useAddition && (\n                <span>\n                  {number1} + {number2}\n                </span>\n              )}\n            </div>\n          </div>\n          <div className=\"Answer\">\n            {answers.map((answer, index) => {\n              const makeGreen =\n                wrongAnswer !== null &&\n                answer ===\n                  (useAddition ? number1 + number2 : number1 * number2);\n\n              const makeRed = wrongAnswer === answer;\n              return (\n                <div\n                  className=\"AnswerDiv\"\n                  style={{\n                    gridColumnStart: (index % 2) + 1,\n                    gridRowStart: index >= 2 ? 2 : 1,\n                  }}\n                >\n                  <button\n                    style={{\n                      background: makeGreen\n                        ? \"lightgreen\"\n                        : makeRed\n                        ? \"red\"\n                        : \"lightgrey\",\n                    }}\n                    onClick={() => onSelectAnswer(answer)}\n                  >\n                    {answer}\n                  </button>\n                </div>\n              );\n            })}\n            <div\n              style={{\n                gridColumnStart: 3,\n                gridRowStart: 1,\n                gridRowEnd: 3,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <meter\n                max={10}\n                min={0}\n                value={meterValue}\n                style={{\n                  transform: \"rotate(270deg)\",\n                  height: \"80px\",\n                  width: \"190px\",\n                  position: \"absolute\",\n                }}\n              ></meter>\n            </div>\n          </div>\n          <div\n            style={{\n              flex: \"1\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              fontSize: \"60px\",\n            }}\n          >\n            <div style={{ fontSize: 32 }}>\n              Correct:{\" \"}\n              <span\n                className={`correctanswer${flashGreen ? \" flashgreen\" : \"\"}`}\n              >\n                {numCorrect}\n              </span>\n            </div>\n            <div style={{ fontSize: 32 }}>Wrong: {numWrong}</div>\n            <div style={{ fontSize: 32 }}>Score: {score}</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}