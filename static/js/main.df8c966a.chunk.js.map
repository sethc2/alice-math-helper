{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","hasRan","setHasRan","maxNumber","setMaxNumber","toString","maxNumberInput","setMaxNumberInput","useAddition","setUseAddition","wrongAnswer","setWrongAnswer","flashGreen","setFlashGreen","numCorrect","setNumCorrect","numWrong","setNumWrong","getNext","max","Math","floor","random","getSet","addition","firstNumber","secondNumber","set","Set","add","size","answers","Array","from","sort","a","b","number1","number2","getAddition","numerator","denominator","getMultiplication","setCurrentProblem","timeRemaining","setTimeRemaining","countdownTimer","useRef","useEffect","current","setTimeout","error","setError","isWaiting","flashTimeout","countdown","className","type","value","min","onChange","e","target","parseInt","style","color","fontSize","onClick","clearTimeout","flex","display","justifyContent","flexDirection","alignItems","fontWeight","map","answer","makeGreen","makeRed","background","onSelectAnswer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df8c966a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState, useRef } from \"react\";\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction App() {\n  const [hasRan, setHasRan] = useState(false);\n  const [showIntro, setShowInto] = useState(true);\n  const [maxNumber, setMaxNumber] = useState(9);\n  const [maxNumberInput, setMaxNumberInput] = useState(maxNumber.toString());\n  const [useAddition, setUseAddition] = useState(false);\n\n  const [wrongAnswer, setWrongAnswer] = useState(null);\n  const [flashGreen, setFlashGreen] = useState(false);\n  const [numCorrect, setNumCorrect] = useState(0);\n  const [numWrong, setNumWrong] = useState(0);\n\n  const getNext = () => {\n    return getRandomInt(maxNumber) + 1;\n  };\n\n  const getAddition = () => {\n    const firstNumber = getNext();\n    const secondNumber = getNext();\n\n    const set = new Set();\n    set.add(firstNumber + secondNumber);\n    while (set.size < 4) {\n      set.add(getNext() + secondNumber);\n    }\n\n    const answers = Array.from(set);\n    answers.sort((a, b) => a - b);\n    return { number1: firstNumber, number2: secondNumber, answers };\n  };\n\n  const getMultiplication = () => {\n    const numerator = getNext();\n    const denominator = getNext();\n\n    const set = new Set();\n    set.add(numerator * denominator);\n    while (set.size < 4) {\n      set.add(getNext() * denominator);\n    }\n\n    const answers = Array.from(set);\n    answers.sort((a, b) => a - b);\n    return { number1: numerator, number2: denominator, answers };\n  };\n\n  const getSet = (addition) => {\n    if (addition) {\n      return getAddition();\n    }\n    return getMultiplication();\n  };\n\n  const [{ number1, number2, answers }, setCurrentProblem] = useState(() =>\n    getSet()\n  );\n\n  const [timeRemaining, setTimeRemaining] = useState(0);\n\n  const countdownTimer = useRef();\n  useEffect(() => {\n    if (timeRemaining <= 0) {\n    } else {\n      countdownTimer.current = setTimeout(() => {\n        setTimeRemaining(timeRemaining - 1);\n      }, 1000);\n    }\n  }, [timeRemaining]);\n\n  const onStart = () => {};\n\n  const [error, setError] = useState();\n\n  const onSelectAddition = () => {\n    if (maxNumber >= 4) {\n      setError(\"\");\n      setMaxNumberInput(maxNumber.toString());\n      setUseAddition(true);\n      onStart();\n      if (timeRemaining) {\n        clearTimeout(countdownTimer.current);\n      }\n      setCurrentProblem(getSet(true));\n      setNumWrong(0);\n      setNumCorrect(0);\n      setTimeRemaining(63);\n      setHasRan(true);\n    } else {\n      setError(\"Max number must be at least 4\");\n    }\n  };\n\n  const onSelectMultiplication = () => {\n    if (maxNumber >= 4) {\n      setError(\"\");\n      setMaxNumberInput(maxNumber.toString());\n      setUseAddition(false);\n      onStart();\n      if (timeRemaining) {\n        clearTimeout(countdownTimer.current);\n      }\n      setCurrentProblem(getSet(false));\n      setNumWrong(0);\n      setNumCorrect(0);\n      setTimeRemaining(63);\n      setHasRan(true);\n    } else {\n      setError(\"Max number must be at least 4\");\n    }\n  };\n\n  const isWaiting = useRef(false);\n\n  const flashTimeout = useRef(null);\n\n  const onSelectAnswer = (answer) => {\n    if (timeRemaining && !isWaiting.current) {\n      const actualAnswer = useAddition ? number1 + number2 : number1 * number2;\n      if (answer === actualAnswer) {\n        setNumCorrect(numCorrect + 1);\n        setCurrentProblem(getSet(useAddition));\n        setFlashGreen(true);\n        clearTimeout(flashTimeout.current);\n        flashTimeout.current = setTimeout(() => {\n          setFlashGreen(false);\n        }, 1000);\n      } else {\n        isWaiting.current = true;\n        setNumWrong(numWrong + 1);\n        setWrongAnswer(answer);\n        setTimeout(() => {\n          setWrongAnswer(null);\n          setCurrentProblem(getSet(useAddition));\n          isWaiting.current = false;\n        }, 2000);\n      }\n    }\n  };\n  useEffect(() => {}, []);\n\n  const countdown = timeRemaining - 60;\n  return (\n    <div>\n      {!timeRemaining && (\n        <div className=\"intro\">\n          <div>\n            <label>Max number:</label>\n            <input\n              type=\"number\"\n              value={maxNumberInput}\n              min={2}\n              onChange={(e) => {\n                setMaxNumberInput(e.target.value);\n                setMaxNumber(\n                  parseInt(e.target.value, 10) > 2\n                    ? parseInt(e.target.value, 10)\n                    : 9\n                );\n              }}\n            />\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\n          </div>\n          <button style={{ fontSize: 20 }} onClick={onSelectAddition}>\n            Addition test\n          </button>\n          <button style={{ fontSize: 20 }} onClick={onSelectMultiplication}>\n            Multiplication test\n          </button>\n          <div>\n            {hasRan && !timeRemaining ? `You got ${numCorrect} right!` : \"\"}\n          </div>\n        </div>\n      )}\n      {countdown > 0 && <div className=\"countdown\">{countdown}</div>}\n      {countdown <= 0 && timeRemaining > 0 && (\n        <div className={`App${countdown > 0 ? \" app-opaque\" : \"\"}`}>\n          <div\n            style={{\n              flex: \"1\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <span>Time left: {timeRemaining}s</span>\n            </div>\n            <div\n              style={{\n                fontWeight: \"bold\",\n                fontSize: \"60px\",\n                flex: 1,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {!useAddition && (\n                <span>\n                  {number1} X {number2}\n                </span>\n              )}\n              {useAddition && (\n                <span>\n                  {number1} + {number2}\n                </span>\n              )}\n            </div>\n          </div>\n          <div className=\"Answer\">\n            {answers.map((answer) => {\n              const makeGreen =\n                wrongAnswer !== null &&\n                answer ===\n                  (useAddition ? number1 + number2 : number1 * number2);\n\n              const makeRed = wrongAnswer === answer;\n              return (\n                <div className=\"AnswerDiv\">\n                  <button\n                    style={{\n                      background: makeGreen\n                        ? \"lightgreen\"\n                        : makeRed\n                        ? \"red\"\n                        : \"lightgrey\",\n                    }}\n                    onClick={() => onSelectAnswer(answer)}\n                  >\n                    {answer}\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n          <div\n            style={{\n              flex: \"1\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              fontSize: \"60px\",\n            }}\n          >\n            <div>\n              Correct:{\" \"}\n              <span\n                className={`correctanswer${flashGreen ? \" flashgreen\" : \"\"}`}\n              >\n                {numCorrect}\n              </span>\n            </div>\n            <div>Wrong: {numWrong}</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}